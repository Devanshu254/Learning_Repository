// Below are all Commits.
1. What is C++? What are the advantages of C++?
Answer - C++ is an object-oriented programming language that was introduced to overcome the jurisdictions where C was lacking. 
By object-oriented we mean that it works with the concept of polymorphism, inheritance, abstraction, encapsulation, object, and class.

Advantages of C++:

C++ is an OOPs language that means the data is considered as objects.
C++ is a multi-paradigm language; In simple terms, it means that we can program the logic, structure, and procedure of the program.
Memory management is a key feature in C++ as it enables dynamic memory allocation
It is a Mid-Level programming language which means it can develop games, desktop applications, drivers, and kernels
To read more, refer to the article – What are the advantages of C++?

2. What are the different data types present in C++?

3. Define ‘std’?
‘std’ is also known as Standard or it can be interpreted as a namespace. The command “using namespace std” informs 
the compiler to add everything under the std namespace and inculcate them in the global namespace. This all inculcation of
global namespace benefits us to use “cout” and “cin” without using “std::_operator_”.
For more information, refer to namespace and std.

4. What are references in C++?
When a variable is described as a reference it becomes an alias of the already existing variable. In simple terms, a referenced variable is another named variable of an existing variable keeping in mind that changes made in the reference variable will be reflected in the already existing variable. A reference variable is preceded with a ‘&’ symbol.

Syntax:

int GFG = 10;

// reference variable
int& ref = GFG;

5. What do you mean by Call by Value and Call by Reference?
In this programming language to call a function we have 2 methods: Call by Value and Call by Reference

Call by Value

Call by Reference

A copy of a variable is passed.	A variable itself is passed fundamentally.
Calling a function by sending the values by copying variables.	
Calling a function by sending the address of the passed variable.
The changes made in the function are never reflected outside the function on the variable. 
In short, the original value is never altered in Call by Value.	
The changes made in the functions can be seen outside the function on the passed function. 
In short, the original value is altered in Call by reference.
Passed actual and formal parameters are stored in different memory locations. Therefore, making Call by Value a little memory 
insufficient 	Passed actual and formal parameters are stored in the same memory location. 
Therefore, making Call by Reference a little more memory efficient.

6. Define token in C++
A token is the smallest individual element of a program that is understood by a compiler. A token comprises the following:

Keywords – That contain a special meaning to the compiler
Identifiers – That hold a unique value/identity 
Constants – That never change their value throughout the program 
Strings – That contains the homogenous sequence of data 
Special Symbols – They have some special meaning and cannot be used for another purpose; eg: [] () {}, ; * = # 
Operators – Who perform operations on the operand
For more information, refer to Tokens in C++

7. What is the difference between C and C++?
C

C++

It is a procedural programming language. In simple words, it does not support classes and objects	It is a mixture 
of both procedural and object-oriented programming languages. In simple words, it supports classes and objects.
It does not support any OOPs concepts like polymorphism, data abstraction, encapsulation, classes, and objects.	
It supports all concepts of data 
It does not support Function and Operator Overloading	It supports Function and Operator Overloading respectively
It is a function-driven language	It is an object-driven language

8. What is the difference between struct and class?
Struct

Class

Members of the struct are always by default public mode	Members of the class can be in private, protected, and public modes.
Structures are of the value type. They only hold value in memory.	Classes are of reference type. It holds a reference of
an object in memory.
The memory in structures is stored as stacks	The memory in classes is stored as heaps.

9. What is the difference between reference and pointer?
Reference

Pointer

The value of a reference cannot be reassigned	The value of a pointer can be reassigned
It can never hold a null value as it needs an existing value to become an alias of                     	
It can hold or point at a null value and be termed as a nullptr or null pointer
It cannot work with arrays	It can work with arrays
To access the members of class/struct it uses a ‘ . ‘	To access the members of class/struct it uses a ‘ -> ‘ 
The memory location of reference can be accessed easily or it can be used directly	The memory location of a pointer 
cannot be accessed easily as we have to use a dereference ‘ * ‘ 

10. What is the difference between function overloading and operator overloading?
Function Overloading

Operator Overloading

It is basically defining a function in numerous ways such that there are many ways to call it or in simple terms you have multiple versions of the same function	It is basically giving practice of giving a special meaning to the existing meaning of an operator or in simple terms redefining the pre-redefined meaning                          
Parameterized Functions are a good example of Function Overloading as just by changing the argument or parameter of a function you make it useful for different purposes 	Polymorphism is a good example of an operator overloading as an object of allocations class can be used and called by different classes for different purposes
Example of Function Overloading:

int GFG(int X, int Y);
int GFG(char X, char Y);
Example of Operator Overloading:

int GFG() = X() + Y();
int GFG() = X() – Y();
