Below questions are updated in
Q1. Merge Sorted Array.
JavaScript Solution.
/**
 * @param {number[]} nums1
 * @param {number} m
 * @param {number[]} nums2
 * @param {number} n
 * @return {void} Do not return anything, modify nums1 in-place instead.
 */
var merge = function(nums1, m, nums2, n) {
    let i=m-1;
    let j=n-1;
    let k=m+n-1;
    while(j>=0) {
        if(i>=0 && nums1[i] >= nums2[j]) {
            nums1[k] = nums1[i];
            i--;
            k--;
        }
        else {
            nums1[k] = nums2[j];
            j--;
            k--;
        }
    }
};
C++
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i=m-1;
        int j=n-1;
        int k = m+n-1;
        while(j>=0) {
            if(i>=0 && nums1[i] >= nums2[j]) {
                nums1[k] = nums1[i];
                k--;
                i--;
            }else {
                nums1[k] = nums2[j];
                k--;
                j--;
            }
        }
    }
};

Code


Q2. Remove Element
26. Remove Duplicates from Sorted Array
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        vector<int> v;
        v.push_back(nums[0]);
        for(int i=1;i<nums.size();i++) {
            if(nums[i] != nums[i-1]) {
                v.push_back(nums[i]);
            }
        }
        for(int i=0;i<v.size();i++) {
            nums[i] = v[i];
        }
        int size = v.size();
        return size;
    }
};
27. Remove Element    
    class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
        int k = 0;
        for(int i=0;i<nums.size();i++) {
            if(nums[i] != val) {
                nums[k] = nums[i];
                k++;
            }
        }
        return k;
    }
};
function removeElement(nums: number[], val: number): number {
    let ind = 0;
    for(let i=0;i<nums.length;i++) {
        if(nums[i] != val) {
            nums[ind] = nums[i];
            ind++;
        }
    }
    return ind;
};
